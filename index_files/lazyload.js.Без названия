"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype&&!("isIntersecting"in IntersectionObserverEntry.prototype)&&Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return 0<this.intersectionRatio}});
function lazyload(){var a=[].slice.call(document.querySelectorAll(".lazyload"));if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype){var b=new IntersectionObserver(function(a,d){a.forEach(function(a){a.isIntersecting&&(a=a.target,lazyloadImage(a),a.classList.remove("lazyload"),b.unobserve(a))})},{rootMargin:"100px"});a.forEach(function(a){b.observe(a)})}else setTimeout(function(){a.forEach(function(a){lazyloadImage(a)})},
1E3)}function lazyloadImage(a){a.dataset&&a.dataset.srcset&&(a.srcset=a.dataset.srcset);a.dataset&&a.dataset.src&&(a.src=a.dataset.src)}
function lazyloadScript(a,b){if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype){var c=new IntersectionObserver(function(a,e){a.forEach(function(a){a.isIntersecting&&(b.apply(),c.disconnect())})},{rootMargin:"30% 0px"});[].slice.call(document.querySelectorAll(a)).forEach(function(a){c.observe(a)})}else b.apply()};
